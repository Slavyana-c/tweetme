{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","console","log","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","type","handleActionBackendEvent","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hidelink","nameDisplay","first_name","last_name","Fragment","UserPicture","hideLink","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBackendUpdate","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweets","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","e","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ec8e04d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\n    var cookieValue = null;\n    if (document.cookie && document.cookie !== '') {\n        var cookies = document.cookie.split(';');\n        for (var i = 0; i < cookies.length; i++) {\n            var cookie = cookies[i].trim();\n            // Does this cookie string begin with the name we want?\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                break;\n            }\n        }\n    }\n    return cookieValue;\n}\n\nexport function backendLookup(method, endpoint, callback, data) {\n    let jsonData;\n    if (data) {\n        jsonData = JSON.stringify(data)\n    }\n\n    const xhr = new XMLHttpRequest();\n    const url = `http://localhost:8000/api${endpoint}`;\n    xhr.responseType = 'json';\n    const csrftoken = getCookie('csrftoken');\n    console.log(csrftoken)\n    xhr.open(method, url);\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\n    if (csrftoken) {\n        // xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\");\n        xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n        xhr.setRequestHeader(\"X-CSRFToken\", csrftoken);\n    }\n    xhr.onload = function () {\n        if (xhr.status === 403) {\n            const detail = xhr.response.detail;\n            if (detail === \"Authentication credentials were not provided.\") {\n                if (window.location.href.indexOf('login') === -1) {\n                    window.location.href = \"/login?showLoginRequired=true\"\n\n                }\n            }\n        }\n        callback(xhr.response, xhr.status)\n    };\n\n    xhr.onerror = function () {\n        callback({\"message\": \"There was an error with the request\"}, 400)\n\n    };\n    xhr.send(jsonData)\n\n}\n\n","import {backendLookup} from \"../lookup\";\n\nexport function apiTweetFeed(callback, nextUrl) {\n    let endpoint = '/tweets/feed/';\n    if(nextUrl !== null && nextUrl !== undefined) {\n         endpoint = nextUrl.replace('http://localhost:8000/api', '')\n    }\n    backendLookup('GET', endpoint, callback)\n}\n\nexport function apiTweetCreate(newTweet, callback) {\n    backendLookup('POST', '/tweets/create/', callback, {content: newTweet})\n}\n\nexport function apiTweetAction(tweetId, action, callback) {\n    const data = {id: tweetId, action: action};\n    backendLookup('POST', '/tweets/action/', callback, data)\n}\n\nexport function apiTweetDetail(tweetId, callback) {\n    backendLookup('GET', `/tweets/${tweetId}/`, callback)\n}\n\nexport function apiTweetList(username, callback, nextUrl) {\n\n    let endpoint = '/tweets/';\n    if(username) {\n        endpoint = `/tweets?username=${username}`\n    }\n    if(nextUrl !== null && nextUrl !== undefined) {\n         endpoint = nextUrl.replace('http://localhost:8000/api', '')\n    }\n    backendLookup('GET', endpoint, callback)\n}","import {apiTweetAction} from \"./lookup\";\nimport React from \"react\";\n\nexport function ActionBtn(props) {\n    const {tweet, action, didPerformAction} = props;\n    const likes = tweet.likes ? tweet.likes : 0;\n    const className = props.className ? props.className : 'btn btn-primary btn-sm';\n    const actionDisplay = action.display ? action.display : 'Action';\n    const display = action.type === 'like' ? `${likes} ${actionDisplay}` : action.display;\n\n    const handleActionBackendEvent = (response, status) => {\n        console.log(response, status);\n        if ((status === 200 || status === 201) && didPerformAction) {\n            //setLikes(response.likes)\n            didPerformAction(response, status)\n        }\n    };\n\n    const handleClick = (event) => {\n        event.preventDefault();\n        apiTweetAction(tweet.id, action.type, handleActionBackendEvent)\n\n\n    };\n    return <button className={className} onClick={handleClick}>{display}</button>\n}\n","import React from \"react\";\n\nexport function UserLink(props) {\n    const {username} = props;\n    const handleUserLink = (event) => {\n        window.location.href = `/profiles/${username}`\n    };\n\n    return <span className={'pointer'} onClick={handleUserLink}>\n        {props.children}\n    </span>\n}\n\nexport function UserDisplay(props) {\n    const {user, includeFullName, hidelink} = props;\n    const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name} ` : null;\n\n    return <React.Fragment>\n        {nameDisplay}\n        {hidelink === true ? `@${user.username}` : <UserLink username={user.username}>@{user.username}</UserLink>}\n    </React.Fragment>\n}\n\nexport function UserPicture(props) {\n    const {user, hideLink} = props;\n    const userIdSpan = <span className={' mx-1 px-3 py-2 rounded-circle bg-dark text-white'}>\n                    {user.username[0]}\n    </span>\n    return hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\n\n}\n\n","import numeral from \"numeral\";\nimport React from \"react\";\n\nexport function DisplayCount(props) {\n    return <span className={props.className}>{numeral(props.children).format('0a')}</span>\n}\n","import React, {useEffect, useState} from \"react\";\nimport numeral from 'numeral'\nimport {apiTweetDetail} from \"../tweets/lookup\";\nimport {apiProfileDetail, apiProfileFollowToggle} from \"./lookup\";\nimport {UserPicture} from \"./components\";\nimport {UserDisplay} from \"./components\";\nimport {DisplayCount} from \"./utils\";\n\nfunction ProfileBadge(props) {\n    const {user, didFollowToggle, profileLoading} = props\n\n    let currentVerb = (user && user.is_following) ? 'Unfollow' : 'Follow'\n    currentVerb = profileLoading ? 'Loading...' : currentVerb\n\n    const handleFollowToggle = (event) => {\n        // console.log(event)\n        event.preventDefault()\n        if (didFollowToggle && !profileLoading) {\n            didFollowToggle(currentVerb)\n        }\n    }\n\n    return user ? <div>\n        <UserPicture user={user} hideLink/>\n        <p><UserDisplay user={user} includeFullName hidelink/></p>\n        <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? 'Follower' : 'Followers' }</p>\n        <p><DisplayCount>{user.following_count}</DisplayCount> Following</p>\n        <p>{user.location}</p>\n        <p>{user.bio}</p>\n        <button className='btn btn-primary' onClick={handleFollowToggle}>{currentVerb}</button>\n    </div> : null\n}\n\n\nexport function ProfileBadgeComponent(props) {\n    const {username} = props\n    // lookup\n    const [didLookup, setDidLookup] = useState(false);\n    const [profile, setProfile] = useState(null)\n    const [profileLoading, setProfileLoading] = useState(false)\n\n\n    const handleBackendLookup = (response, status) => {\n        if (status === 200) {\n            setProfile(response)\n        }\n    };\n\n    useEffect(() => {\n        if (didLookup === false) {\n            apiProfileDetail(username, handleBackendLookup);\n            setDidLookup(true)\n        }\n\n    }, [username, didLookup, setDidLookup]);\n\n    const handleNewFollow = (actionVerb) => {\n        setProfileLoading(true)\n        apiProfileFollowToggle(username, actionVerb, (response, status) => {\n            if(status === 200) {\n                 setProfile(response)\n            //                apiProfileDetail(username, handleBackendLookup);\n            }\n            setProfileLoading(false)\n            console.log(response, status)\n\n\n        })\n\n    }\n\n    return didLookup === false ? 'Loading...' : profile ?\n        <ProfileBadge user={profile} didFollowToggle={handleNewFollow} profileLoading={profileLoading}/> : null\n}\n","import {backendLookup} from \"../lookup\";\n\nexport function apiProfileDetail(username, callback) {\n    backendLookup('GET', `/profiles/${username}/`, callback)\n}\n\nexport function apiProfileFollowToggle(username, action, callback) {\n    const data = {action: `${action && action}`.toLowerCase()}\n    backendLookup('POST', `/profiles/${username}/follow`, callback, data)\n}","import React, {useState} from \"react\";\nimport {ActionBtn} from \"./buttons\";\nimport {UserDisplay, UserPicture} from \"../profiles\";\n\nexport function ParentTweet(props) {\n    const {tweet} = props;\n    return tweet.parent ?\n        <Tweet isRetweet retweeter={props.retweeter} hideActions className={' '} tweet={tweet.parent}/> : null\n}\n\nexport function Tweet(props) {\n    const {tweet, didRetweet, hideActions, isRetweet, retweeter} = props;\n    // writing tweet instead of props.tweet should also work\n    const [actionTweet, setActionTweet] = useState(props.tweet ? props.tweet : null);\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6';\n\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\n    const path = window.location.pathname;\n    const match = path.match(/\\/(?<tweetid>\\d+)/);\n    const urlTweetId = match ? match.groups.tweetid : -1;\n\n    const isDetail = `${tweet.id}` === `${urlTweetId}`;\n\n    const handlePerformAction = (newActionTweet, status) => {\n        if (status === 200) {\n            setActionTweet(newActionTweet)\n\n        } else if (status === 201) {\n            // let the tweet list know\n            if (didRetweet) {\n                didRetweet(newActionTweet)\n\n            }\n        }\n    };\n\n    const handleLink = (event) => {\n        event.preventDefault();\n        window.location.href = `/${tweet.id}`\n    };\n\n    return <div className={className}>\n        {isRetweet === true && <div className={'mb-2'}>\n            <span className={'small text-muted '}>Retweet via <UserDisplay user={retweeter}/></span>\n        </div>}\n\n        <div className={'d-flex'}>\n\n            <div className={''}>\n                <UserPicture user={tweet.user}/>\n\n            </div>\n            <div className={'col-11'}>\n                <div>\n                    <p>\n                        <UserDisplay includeFullName user={tweet.user}/>\n                    </p>\n                    <p>{tweet.content}</p>\n                    <ParentTweet tweet={tweet} retweeter={tweet.user}/>\n                </div>\n                <div className={'btn btn-group px-0'}>\n                    {(actionTweet && hideActions !== true) && <React.Fragment>\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction}\n                                   action={{type: 'like', display: \"Likes\"}}/>\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction}\n                                   action={{type: 'unlike', display: \"Unlike\"}}/>\n                        <ActionBtn tweet={actionTweet} didPerformAction={handlePerformAction}\n                                   action={{type: 'retweet', display: \"Retweet\"}}/>\n                    </React.Fragment>}\n                    {isDetail === true ? null :\n                        <button className={'btn btn-outline-primary btn-sm'} onClick={handleLink}>View</button>}\n                </div>\n            </div>\n\n        </div>\n    </div>\n}\n\n","import React, {useEffect, useState} from \"react\";\nimport {apiTweetList} from \"./lookup\";\nimport {Tweet} from \"./detail\";\n\nexport function TweetsList(props) {\n    const [tweetsInit, setTweetsInit] = useState([]);\n    const [tweets, setTweets] = useState([]);\n    const [nextUrl, setNextUrl] = useState(null);\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\n\n\n    useEffect(() => {\n        const final = [...props.newTweets.concat(tweetsInit)];\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n\n    }, [props.newTweets, tweets, tweetsInit]);\n\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next);\n                    setTweetsInit(response.results);\n                    setTweetsDidSet(true)\n                } else {\n                    console.log(response);\n                    alert(\"There was an error\")\n                }\n            };\n            apiTweetList(props.username, handleTweetListLookup)\n\n        }\n\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n    // Update both states to work with create tweet and retweet\n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit];\n        updateTweetsInit.unshift(newTweet);\n        setTweetsInit(updateTweetsInit);\n        const updateFinalTweets = [...tweets];\n        updateFinalTweets.unshift(tweets);\n        setTweets(updateFinalTweets)\n\n    };\n\n    const handleLoadNext = (event) => {\n        event.preventDefault();\n        if (nextUrl !== null) {\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next);\n                    const newTweets = [...tweets].concat(response.results);\n                    setTweetsInit(newTweets);\n                    setTweets(newTweets);\n                } else {\n                    alert(\"There was an error\")\n                }\n\n\n            };\n            apiTweetList(props.username, handleLoadNextResponse, nextUrl)\n        }\n\n\n    };\n\n    return <React.Fragment>\n        {tweets.map((item, index) => {\n            return <Tweet\n                tweet={item}\n                didRetweet={handleDidRetweet}\n                className='my-5 py-5 border bg-white text-dark'\n                key={`${index} - ${item.id}`}/>\n        })}\n\n        {nextUrl !== null && <button onClick={handleLoadNext} className={'btn btn-outline-primary'}>Load Next</button>}\n    </React.Fragment>\n\n\n}","import React from \"react\";\nimport {apiTweetCreate} from \"./lookup\";\n\nexport function TweetCreate(props) {\n    const textAreaRef = React.createRef();\n    const {didTweet} = props;\n\n    const handleBackendUpdate = (response, status) => {\n        // backend api response handler\n        if (status === 201) {\n            didTweet(response)\n\n        } else {\n            console.log(response);\n            alert(\"An error occurred. Please try again.\")\n        }\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        const newVal = textAreaRef.current.value;\n\n        // backend api request\n        apiTweetCreate(newVal, handleBackendUpdate);\n\n        textAreaRef.current.value = ' '\n    };\n\n    return <div className={props.className}>\n        <form onSubmit={handleSubmit}>\n             <textarea ref={textAreaRef} required={true} className={'form-control'} name={'tweet'}>\n\n            </textarea>\n            <button type={'submit'} className={'btn btn-primary my-3'}>Tweet</button>\n\n        </form>\n    </div>\n}\n","import React, {useEffect, useState} from \"react\";\nimport {apiTweetFeed} from \"./lookup\";\nimport {Tweet} from \"./detail\";\n\nexport function FeedList(props) {\n    const [tweetsInit, setTweetsInit] = useState([]);\n    const [tweets, setTweets] = useState([]);\n    const [nextUrl, setNextUrl] = useState(null);\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\n\n\n    useEffect(() => {\n        const final = [...props.newTweets.concat(tweetsInit)];\n        if (final.length !== tweets.length) {\n            setTweets(final)\n        }\n\n    }, [props.newTweets, tweets, tweetsInit]);\n\n    useEffect(() => {\n        if (tweetsDidSet === false) {\n            const handleTweetListLookup = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next);\n                    setTweetsInit(response.results);\n                    setTweetsDidSet(true)\n                }\n            };\n            apiTweetFeed(handleTweetListLookup)\n\n        }\n\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\n\n    // Update both states to work with create tweet and retweet\n    const handleDidRetweet = (newTweet) => {\n        const updateTweetsInit = [...tweetsInit];\n        updateTweetsInit.unshift(newTweet);\n        setTweetsInit(updateTweetsInit);\n        const updateFinalTweets = [...tweets];\n        updateFinalTweets.unshift(tweets);\n        setTweets(updateFinalTweets)\n\n    };\n\n    const handleLoadNext = (event) => {\n        event.preventDefault();\n        if (nextUrl !== null) {\n            const handleLoadNextResponse = (response, status) => {\n                if (status === 200) {\n                    setNextUrl(response.next);\n                    const newTweets = [...tweets].concat(response.results);\n                    setTweetsInit(newTweets);\n                    setTweets(newTweets);\n                }\n\n            };\n            apiTweetFeed(handleLoadNextResponse, nextUrl)\n        }\n\n\n    };\n\n    return <React.Fragment>\n        {tweets.map((item, index) => {\n            return <Tweet\n                tweet={item}\n                didRetweet={handleDidRetweet}\n                className='my-5 py-5 border bg-white text-dark'\n                key={`${index} - ${item.id}`}/>\n        })}\n\n        {nextUrl !== null && <button onClick={handleLoadNext} className={'btn btn-outline-primary'}>Load Next</button>}\n    </React.Fragment>\n\n\n}","import React, {useEffect, useState} from \"react\";\nimport {apiTweetDetail} from \"./lookup\";\nimport {TweetsList} from \"./list\";\nimport {TweetCreate} from \"./create\";\nimport {Tweet} from \"./detail\";\nimport {FeedList} from \"./feed\"\n\nexport function FeedComponent(props) {\n\n    const [newTweets, setNewTweets] = useState([]);\n\n    const canTweet = props.canTweet === 'false' ? false : true;\n\n    const handleBackendUpdate = (response, status) => {\n        // backend api response handler\n        let tempNewTweets = [...newTweets];\n        tempNewTweets.unshift(response);\n        setNewTweets(tempNewTweets)\n    };\n\n    return <div className={props.className}>\n        {canTweet === true &&\n        <TweetCreate didTweet={handleBackendUpdate} className={'col-12 mb-3'}/>}\n        {/*pass all props from this component*/}\n        <FeedList  newTweets={newTweets} {...props}/>\n\n    </div>\n}\n\nexport function TweetsComponent(props) {\n\n    const [newTweets, setNewTweets] = useState([]);\n\n    const canTweet = props.canTweet === 'false' ? false : true;\n\n    const handleBackendUpdate = (response, status) => {\n        // backend api response handler\n        let tempNewTweets = [...newTweets];\n        tempNewTweets.unshift(response);\n        setNewTweets(tempNewTweets)\n    };\n\n    return <div className={props.className}>\n        {canTweet === true &&\n        <TweetCreate didTweet={handleBackendUpdate} className={'col-12 mb-3'}/>}\n        {/*pass all props from this component*/}\n        <TweetsList newTweets={newTweets} {...props}/>\n\n    </div>\n}\n\nexport function TweetDetailComponent(props) {\n    const {tweetId} = props;\n    const [didLookup, setDidLookup] = useState(false);\n    const [tweet, setTweet] = useState(null)\n\n\n    const handleBackendLookup = (response, status) => {\n        if(status === 200) {\n            setTweet(response)\n        } else {\n            alert(\"There was an error finding your tweet.\")\n        }\n    };\n\n    useEffect(() => {\n        if (didLookup === false) {\n            apiTweetDetail(tweetId, handleBackendLookup);\n            setDidLookup(true)\n        }\n\n    }, [tweetId, didLookup, setDidLookup]);\n\n    return tweet === null ? null : <Tweet tweet={tweet} className={props.className}/>\n\n}","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {TweetsComponent} from \"./tweets\";\n\n\nfunction App() {\n\n    return (\n        <div>\n            <TweetsComponent/>\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <p>\n                        Edit <code>src/App.js</code> and save to reload.\n                    </p>\n\n                    <a\n                        className=\"App-link\"\n                        href=\"https://reactjs.org\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Learn React\n                    </a>\n                </header>\n            </div>\n        </div>\n\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {ProfileBadgeComponent} from \"./profiles\";\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from \"./tweets\";\n\nconst appEl = document.getElementById('root');\nif(appEl) {\n    ReactDOM.render(<App/>, appEl);\n}\n\n// this way we pass all dataset elements to props, not just 1 by 1\nconst e = React.createElement;\nconst tweetsEl = document.getElementById('tweetme');\nif(tweetsEl) {\n    ReactDOM.render(e(TweetsComponent, tweetsEl.dataset), tweetsEl);\n}\n\nconst tweetFeedEl  = document.getElementById('tweetme-feed');\nif(tweetFeedEl) {\n    ReactDOM.render(e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl);\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-detail\");\ntweetDetailElements.forEach(container => {\n         ReactDOM.render(e(TweetDetailComponent, container.dataset), container);\n\n});\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-profile-badge\");\nuserProfileBadgeElements.forEach(container => {\n         ReactDOM.render(e(ProfileBadgeComponent, container.dataset), container);\n\n});\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}